/* This file was generated by SableCC (http://www.sablecc.org/). */

package golite.analysis;

import golite.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseACstGrammar(ACstGrammar node);

    void caseTWhitespace(TWhitespace node);
    void caseTImport(TImport node);
    void caseTPackage(TPackage node);
    void caseTChan(TChan node);
    void caseTConst(TConst node);
    void caseTDefault(TDefault node);
    void caseTDefer(TDefer node);
    void caseTVar(TVar node);
    void caseTType(TType node);
    void caseTStruct(TStruct node);
    void caseTInterface(TInterface node);
    void caseTFunc(TFunc node);
    void caseTReturn(TReturn node);
    void caseTIf(TIf node);
    void caseTElse(TElse node);
    void caseTSwitch(TSwitch node);
    void caseTCase(TCase node);
    void caseTGoto(TGoto node);
    void caseTFor(TFor node);
    void caseTBreak(TBreak node);
    void caseTContinue(TContinue node);
    void caseTFallthrough(TFallthrough node);
    void caseTGo(TGo node);
    void caseTMap(TMap node);
    void caseTRange(TRange node);
    void caseTSelect(TSelect node);
    void caseTPrint(TPrint node);
    void caseTAppend(TAppend node);
    void caseTPrintln(TPrintln node);
    void caseTBool(TBool node);
    void caseTInt(TInt node);
    void caseTFloat64(TFloat64 node);
    void caseTRune(TRune node);
    void caseTString(TString node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTStar(TStar node);
    void caseTSlash(TSlash node);
    void caseTPercent(TPercent node);
    void caseTAmp(TAmp node);
    void caseTPipe(TPipe node);
    void caseTCaret(TCaret node);
    void caseTLshift(TLshift node);
    void caseTRshift(TRshift node);
    void caseTAmpCaret(TAmpCaret node);
    void caseTPlusEq(TPlusEq node);
    void caseTMinusEq(TMinusEq node);
    void caseTStarEq(TStarEq node);
    void caseTSlashEq(TSlashEq node);
    void caseTPercentEq(TPercentEq node);
    void caseTAmpEq(TAmpEq node);
    void caseTPipeEq(TPipeEq node);
    void caseTCaretEq(TCaretEq node);
    void caseTLshiftEq(TLshiftEq node);
    void caseTRshiftEq(TRshiftEq node);
    void caseTAmpCaretEq(TAmpCaretEq node);
    void caseTAmpAmp(TAmpAmp node);
    void caseTBarBar(TBarBar node);
    void caseTLarrow(TLarrow node);
    void caseTPlusPlus(TPlusPlus node);
    void caseTMinusMinus(TMinusMinus node);
    void caseTEqEq(TEqEq node);
    void caseTLt(TLt node);
    void caseTGt(TGt node);
    void caseTEq(TEq node);
    void caseTExclamation(TExclamation node);
    void caseTNotEq(TNotEq node);
    void caseTLtEq(TLtEq node);
    void caseTGtEq(TGtEq node);
    void caseTColonEq(TColonEq node);
    void caseTElipsis(TElipsis node);
    void caseTParenL(TParenL node);
    void caseTParenR(TParenR node);
    void caseTSquareL(TSquareL node);
    void caseTSquareR(TSquareR node);
    void caseTBraceL(TBraceL node);
    void caseTBraceR(TBraceR node);
    void caseTComma(TComma node);
    void caseTDot(TDot node);
    void caseTSemicolon(TSemicolon node);
    void caseTColon(TColon node);
    void caseTComment(TComment node);
    void caseTLitInt(TLitInt node);
    void caseTLitOctal(TLitOctal node);
    void caseTLitHex(TLitHex node);
    void caseTLitFloat(TLitFloat node);
    void caseTLitRune(TLitRune node);
    void caseTLitRaw(TLitRaw node);
    void caseTLitInterpreted(TLitInterpreted node);
    void caseTId(TId node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
